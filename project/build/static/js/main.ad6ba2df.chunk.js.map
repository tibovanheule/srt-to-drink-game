{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","count","undefined","srt","bind","event","target","files","reader","FileReader","onload","e","a","text","result","parser","fromSrt","forEach","replace","toLowerCase","split","hasOwnProperty","countarray","Object","keys","map","key","sort","first","second","setState","readAsText","type","onChange","this","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mSAGqBA,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KA6BVC,MAAQ,CAACC,WAAOC,GA5BZ,EAAKC,IAAM,EAAKA,IAAIC,KAAT,gBAFI,E,iEAMfC,GAAQ,IAAD,OACP,QAA6BH,IAAzBG,EAAMC,OAAOC,MAAM,GAAiB,CACpC,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAP,uCAAgB,WAAOC,GAAP,qBAAAC,EAAA,sDACNC,EAAQF,EAAEL,OAAOQ,OACnBA,EAASC,IAAOC,QAAQH,GAAM,GAC9BZ,EAAQ,GACZa,EAAOG,SAAQ,SAACN,GACGA,EAAEE,KAAKK,QAAQ,KAAM,IAAIA,QAAQ,mBAAoB,IAAIA,QAAQ,MAAO,IAAIA,QAAQ,OAAQ,IAAIC,cAAcC,MAAM,YAC1HH,SAAQ,SAACN,GACVV,EAAMoB,eAAeV,GAAIV,EAAMU,IAAM,EACpCV,EAAMU,GAAK,SAIpBW,EAAaC,OAAOC,KAAKvB,GAAOwB,KAAI,SAACC,GAAD,MAAS,CAACA,EAAKzB,EAAMyB,QAElDC,MAAK,SAACC,EAAOC,GAAR,OAAmBA,EAAO,GAAKD,EAAM,MACrD,EAAKE,SAAS,CAAC7B,MAAOqB,IAfV,2CAAhB,sDAiBAd,EAAOuB,WAAW1B,EAAMC,OAAOC,MAAM,O,+BAOzC,OACI,6BACI,mDACA,2BAAOyB,KAAM,OAAQC,SAAUC,KAAK/B,WACdD,IAArBgC,KAAKlC,MAAMC,OAAuB,yBAAKkC,GAAI,UACvCD,KAAKlC,MAAMC,MAAMwB,KAAI,SAACC,GAAD,OAClB,2BAAIA,EAAI,GAAK,KAAOA,EAAI,a,GAzCfU,IAAMC,WCEvCC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.ad6ba2df.chunk.js","sourcesContent":["import React from 'react';\nimport parser from 'subtitles-parser';\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.srt = this.srt.bind(this);\n    }\n\n\n    srt(event) {\n        if (event.target.files[0]!== undefined) {\n            const reader = new FileReader();\n            reader.onload = async (e) => {\n                const text = (e.target.result);\n                let result = parser.fromSrt(text, false);\n                let count = {};\n                result.forEach((e) => {\n                    let sentence = e.text.replace(\"'s\", '').replace(/[!.?\\-\\*\\$\"']+/gi, '').replace('<i>', '').replace('</i>', '').toLowerCase().split(/[\\s,\\n]+/);\n                    sentence.forEach((e) => {\n                        if (count.hasOwnProperty(e)) count[e] += 1;\n                        else count[e] = 1;\n                    })\n                });\n                // Create items array\n                let countarray = Object.keys(count).map((key) => [key, count[key]]);\n                // Sort the array based on the second element\n                countarray.sort((first, second) => second[1] - first[1]);\n                this.setState({count: countarray});\n            };\n            reader.readAsText(event.target.files[0]);\n        }\n    }\n\n    state = {count: undefined};\n\n    render() {\n        return (\n            <div>\n                <p>Upload your srt file</p>\n                <input type={\"file\"} onChange={this.srt}/>\n                {this.state.count !== undefined && <div id={\"result\"}>\n                    {this.state.count.map((key) =>\n                        <p>{key[0] + \": \" + key[1]}</p>\n                    )}\n                </div>}\n            </div>\n        );\n    }\n\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}